{"version":3,"file":"datepicker-filter.component.js","sourceRoot":"","sources":["../../../../../src/ng2-smart-table/components/filter/filter-types/datepicker-filter.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAU,KAAK,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,WAAW,EAAa,WAAW,EAAE,UAAU,EAAE,MAAM,gBAAgB,CAAC;AAEjF,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,gCAAgC,CAAC;AACxC,OAAO,wBAAwB,CAAC;AAoDhC,IAAa,yBAAyB;IAAS,6CAAa;IAiB1D,mCAAoB,EAAe;QAAnC,YACE,iBAAO,SACR;QAFmB,QAAE,GAAF,EAAE,CAAa;QAdnC,kBAAY,GAAY,KAAK,CAAC;QAC9B,kBAAY,GAAG,IAAI,WAAW,EAAE,CAAC;;IAejC,CAAC;IAXD,sBAAI,4CAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAGD,UAAU,KAAY;YACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAA;QACxB,CAAC;;;OALA;IAWD,4CAAQ,GAAR;QAAA,iBAqBC;QAnBC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;SAChC,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,YAAY;aACxC,oBAAoB,EAAE;aACtB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;aACxB,GAAG,CAAC,UAAC,CAAC;YACL,IAAI,OAAO,GAAG,CAAC;oBACb,KAAK,EAAE,KAAI,CAAC,MAAM,CAAC,EAAE;oBACrB,MAAM,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,IAAI,EAAE;iBAC7D,CAAC,CAAC;YAEH,MAAM,CAAC,OAAO,CAAC;QACjB,CAAC,CAAC;aACD,SAAS,CAAC,UAAC,OAAO;YACjB,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC;YACrB,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAW,GAAX;QACE,EAAE,CAAC,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB,MAAM,CAAA;QACR,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC;IAEH,gCAAC;AAAD,CAAC,AAnDD,CAA+C,aAAa,GAmD3D;AAtCC;IADC,KAAK,EAAE;;;sDAGP;AAfU,yBAAyB;IAjDrC,SAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,QAAQ,EAAE,irBAoBT;QACD,MAAM,EAAE,CAAC,waAwBR,CAAC;KACH,CAAC;qCAkBwB,WAAW;GAjBxB,yBAAyB,CAmDrC;SAnDY,yBAAyB","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { DefaultFilter } from './default-filter';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/skip';\n\n\n@Component({\n  selector: 'datepicker-filter',\n  template: `\n    <form [formGroup]=\"dateForm\" novalidate>\n      <div class=\"input-group\">\n      <span class=\"input-group-btn\" (click)=\"d.toggle()\">\n        <i style=\"font-size: 23px; margin-right: 5px; cursor:pointer\" class=\"fa fa-calendar\"></i>\n      </span>\n        <div class=\"form-control date-input\">\n          <input\n            type=\"text\"\n            class=\"input\"\n            placeholder=\"yyyy-mm-dd\"\n            ngbDatepicker\n            #d=\"ngbDatepicker\"\n            formControlName=\"date\"\n            [readonly]=\"true\"\n          />\n          <i class=\"fa fa-times\" (click)=\"clearFilter()\"></i>\n        </div>\n      </div>\n    </form>\n  `,\n  styles: [`\n    .date-input {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      flex-direction: row;\n    }\n\n    .input {\n      border: none;\n      padding: 0 !important;\n    }\n\n    .fa-calendar {\n      font-size: 25px;\n      cursor: pointer;\n      margin-right: 5px;\n    }\n\n    .fa-times {\n      font-size: 15px;\n      color: lightgrey;\n      cursor: pointer\n    }\n  `]\n})\nexport class DatepickerFilterComponent extends DefaultFilter implements OnInit {\n\n  public dateForm: FormGroup;\n  filterActive: boolean = false;\n  inputControl = new FormControl();\n\n  private dateModel: any;\n\n  get query(): any[] {\n    return this.dateModel;\n  }\n\n  @Input()\n  set query(value: any[]) {\n    this.dateModel = value\n  }\n\n  constructor(private fb: FormBuilder) {\n    super();\n  }\n\n  ngOnInit() {\n\n    this.dateForm = this.fb.group({\n      date: ['', Validators.required]\n    });\n\n    this.dateForm.controls['date'].valueChanges\n      .distinctUntilChanged()\n      .debounceTime(this.delay)\n      .map((a) => {\n        let filters = [{\n          field: this.column.id,\n          search: new Date(a.year, a.month - 1, a.day).getTime() || ''\n        }];\n\n        return filters;\n      })\n      .subscribe((filters) => {\n        this.query = filters;\n        this.setCustomFilter();\n      });\n  }\n\n  clearFilter() {\n    if (! this.query) {\n      return\n    }\n    this.dateForm.controls['date'].setValue('');\n  }\n\n}\n"]}